// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskFlow.Tasks.Infrastructure;

#nullable disable

namespace Tasks.Infrastructure.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    partial class TaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.Task", b =>
                {
                    b.OwnsMany("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.TaskHistory", "History", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<string>("Action")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<Guid>("TaskId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("TaskId");

                            b1.ToTable("TaskHistories");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });

                    b.Navigation("History");
                });

            modelBuilder.Entity("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.TaskItem", b =>
                {
                    b.HasOne("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.Task", null)
                        .WithMany("Items")
                        .HasForeignKey("TaskId");
                });

            modelBuilder.Entity("TaskFlow.Tasks.Domain.AggregateModels.TaskAggregate.Task", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
